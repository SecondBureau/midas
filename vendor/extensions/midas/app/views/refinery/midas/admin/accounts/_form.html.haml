
= form_for [refinery, :midas_admin, @account] do |f|
  
  = render '/refinery/admin/error_messages', :object => @account, :include_object_name => true

  = render "locale_picker", :current_locale => Thread.current[:globalize_locale] if Refinery.i18n_enabled?

  .field
    = f.label :title
    = f.text_field :title, :class => 'larger widest'
  
  .field
    #page-tabs.clearfix.ui-tabs.ui-widget.ui-widget-content.ui-corner-all
      %ul#page_parts
        - [:description].each_with_index do |part, part_index|
          <li class='ui-state-default#{' ui-state-active' if part_index == 0}'>
          \#{link_to t("#{part}", :scope => "activerecord.attributes.refinery/midas/account", :default => part.to_s.titleize), "##{part}"}
      #page_part_editors
        - [:description].each do |part|
          .page_part{:id => part}
            = f.text_area part, :rows => 20, :class => 'wymeditor widest'
  
  .field
    = f.label :active
    = f.check_box :active, :checked => @account[:active]
  
  .field
    = f.label :currency
    = f.select :currency, Refinery::Midas.config.devises.collect{|d| [d.upcase, d]}
  
  .field
    = f.label :confidential
    = f.check_box :confidential, :checked => @account[:confidential]
  .field
    = f.label :group
    = f.text_field :group
  .field
    = f.label :opening_balance_in_cents
    = f.number_field :opening_balance_in_cents
  .field
    = f.label :opened_on
    = f.date_select :opened_on
  .field
    = f.label :closed_on
    = f.date_select :closed_on
  = render '/refinery/admin/form_actions', :f => f,                                                   |
    :continue_editing => false,                                                                       |
    :delete_title => t('delete', :scope => 'refinery.accounts.admin.accounts.account'),               |
    :delete_confirmation => t('message', :scope => 'refinery.admin.delete', :title => @account.title) |
- content_for :javascripts do
  :javascript
    $(document).ready(function(){
      page_options.init(false, '', '');
    });
  